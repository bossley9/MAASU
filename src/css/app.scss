@import 'src/util';

*, *::before, *::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

@font-face {
  font-family: 'hind';
  src: url('/fonts/hind-bold-modified/hind-bold-modified-webfont.woff2') format('woff2'),
        url('/fonts/hind-bold-modified/hind-bold-modified.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}

body, html {
  height: 100%;
  min-height: 100%;
}

body {
  margin: 0;
  font-family: var(--typography-fontFamily-secondary);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: var(--typography-fontSize);
  
  color: var(--palette-text-main);
  background-color: var(--palette-background-main);
}

[hidden] {
  display: none;
}

#root {
  position: relative;
  height: 100%;
  width: 100%;
}

.app {
  position: relative;
  height: 100%;
  min-height: 100%;
}

.appInner {
  position: relative;
  height: 100%;
  width: 100%;
}

.footerSpace {
  height: var(--spacing);
}

.aspectRatioBox {
    position: relative;
    width: 100%;
    margin: 0 auto;

    &::before {
        content: "";
        width: 1px;
        margin-left: -1px;
        float: left;
        height: 0;
        padding-top: calc(100% / (var(--aspect-ratio, 1)));
    }

    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

.aspectRatioBoxAbsolute {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

.aspectRatioBoxRelative {
    position: relative;
    height: 100%;
    width: 100%;
}

.bufferedImage {
  position: relative;
  height: auto;
  width: auto;
}

.buffering::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 1;

  $bg: var(--palette-background-main);
  $fg: var(--palette-background-dark);


  background: linear-gradient(270deg, $bg, $fg, $bg);
  background-size: 400% 400%;
  
  -webkit-animation: Placeholder 2s ease infinite;
     -moz-animation: Placeholder 2s ease infinite;
      -ms-animation: Placeholder 2s ease infinite;
       -o-animation: Placeholder 2s ease infinite;
          animation: Placeholder 2s ease infinite;    
}

@-webkit-keyframes Placeholder {
  0% { background-position: 0% 50% }
  50% { background-position: 100% 50% }
  100% { background-position: 0% 50% }
}
@-moz-keyframes Placeholder {
  0% { background-position: 0% 50% }
  50% { background-position: 100% 50% }
  100% { background-position: 0% 50% }
}
@keyframes Placeholder {
  0% { background-position: 0% 50% }
  50% { background-position: 100% 50% }
  100% { background-position: 0% 50% }
}

$numGridCells: 12;

// grid component

.grid {
    display: flex;
}

.gridX {
    flex-flow: row wrap;
    flex-direction: row;

    & > .auto,
    & > .shrink {
        width: auto;
    }
}

.gridY {
    flex-flow: column wrap;
    flex-direction: column;

    & > .auto,
    & > .shrink {
        height: auto;
    }
}

// cell component

.cell {
    flex: 0 0 auto;

    min-height: 0px;
    min-width: 0px;
    width: 100%;

    &.auto {
        flex: 1 1 0px;
    }
    
    &.shrink {
        flex: 0 0 auto;
    }
    
}

// media queries

$map: (
    sm: $sm-down,
    md: $md-only,
    lg: $lg-up,
);

@function calcGridSize($x) {
    @return 100% / $numGridCells * $x;
}

@each $key, $query in $map {
@media #{$query} {
    
    @for $i from 1 through $numGridCells {

        .gridX > .#{$key}-#{$i},
        .gridY > .#{$key}-#{$i} {
            flex-basis: auto;
            flex: 0 0 auto;
        }

        .gridX > .#{$key}-#{$i} {
            width: calcGridSize($i);     
        }

        .gridY > .#{$key}-#{$i} {
            height: calcGridSize($i);
        }
    }

}
}

.page {
  position: relative;
  // min-height: 100%;
  width: 100%;
  padding: 0 calc(var(--spacing) / 4);
  padding-top: var(--spacing);
}

.page h1:first-child,
.page h2:first-child,
.page h3:first-child,
.page h4:first-child,
.page h5:first-child,
.page h6:first-child { margin-top: 0 }

@media #{$md-up} {
  .page {
    padding: 0 var(--spacing);
    padding-top: calc(var(--spacing) / 4);
  }
}

.link {
  text-decoration: none;
}

$dist: calc(var(--spacing) / 8);

.pressableContainer {
  position: relative;
  display: inline-block;
  padding: calc(var(--spacing) / 4);

  top: calc(-1 * #{$dist});
  box-shadow: 0 $dist var(--palette-primary-dark);

  text-decoration: none;
  color: var(--palette-white);
  background-color: var(--palette-primary-main);
  border-radius: calc(var(--spacing) / 16);

  &:active {
    box-shadow: 0 0 var(--palette-primary-dark);
    top: 0;
  }

}

$hoverUp: 0.75; // desktop hover height

@media #{$md-up} {

  .pressableContainer {
    top: calc(-1 * #{$dist} * #{$hoverUp});
    box-shadow: 0 calc(#{$dist} * #{$hoverUp}) var(--palette-primary-dark);

    &:hover {
      top: calc(-1 * #{$dist});
      box-shadow: 0 $dist var(--palette-primary-dark);
    }

    &:active {
      box-shadow: 0 0 var(--palette-primary-dark);
      top: 0;
    }

  }

}

$stringWidth: calc(var(--spacing) / 8);
$stringColor: var(--palette-primary-main);

.container { padding: 0 calc(var(--spacing) / 2) }

@media #{$md-up} {
  .container { padding: 0 calc(var(--spacing) / 2) }
}

.timeContainer {
  position: relative;
  display: flex;

  // left
  flex-direction: row;
  text-align: left;
}

// right
.timeContainer:nth-child(2n) {
  flex-direction: row-reverse;
}

.timeContainer:not(:first-child)::after {
  content: '';
  position: absolute;
  left: 50%;
  width: calc(100% + #{$stringWidth});
  height: $stringWidth;
  background-color: $stringColor;

  transform: translate(-50%);
}

.labelContainer { position: relative }

.labelContainer::after {
  content: '';
  position: absolute;
  left: 50%;
  width: $stringWidth;
  height: 100%;
  background-color: $stringColor;

  transform: translateX(-50%);
}

.timeContainer:first-child .labelContainer::after {
  top: 50%;
  height: 50%;
}

.timeContainer:last-child .labelContainer::after {
  height: 100%;
}

.labelContainer > div {
  position: absolute;
  top: 50%;
  padding: $stringWidth;

  color: var(--palette-background-main);
  background-color: $stringColor;
  border-radius: 2px;

  transform: translate(-50%, -50%);
  z-index: 1;

  & > span { position: relative }
}

.contentContainer {
  padding: calc(var(--spacing) / 4) calc(var(--spacing) / 2);

  h4 { margin: calc(var(--spacing) / 8) 0 }
  p { margin: 0 }
}

@media #{$md-up} {
  .contentContainer {
    padding: calc(var(--spacing) / 2) var(--spacing);
    h4 { margin: calc(var(--spacing) / 4) 0 }
  }
}

.disp-in-flex {
  display: inline-flex;
}

h1.typography, h2.typography, h3.typography, h4.typography, h5.typography, h6.typography, em.typography {
    font-family: var(--typography-fontFamily-primary);
}

h1.typography, .sub1-typography, .text1-typography {
    font-size: 3.052em;
}

h2.typography, .sub2-typography, .text2-typography {
    font-size: 2.441em;
}

h3.typography, .sub3-typography, .text3-typography {
    font-size: 1.953em;
}

h4.typography, .sub4-typography, .text4-typography {
    font-size: 1.563em;
}

h5.typography, .sub5-typography, .text5-typography {
    font-size: 1.25em;
}

h6.typography, .sub6-typography, .text6-typography {
    font-size: 1em;
}

.subtitle-typography, .text-typography {
    font-family: var(--typography-fontFamily-primary);
    margin-top: 0;
    font-weight: 400;
}

em.typography, .styled-typography {
    font-weight: bold;
    font-style: normal;
    -webkit-text-stroke-width: 1.5px;
    -webkit-text-stroke-color: currentColor;
    -webkit-text-fill-color: transparent;
}

.capitalized-typography {
    text-transform: uppercase;
}

// SC page

.em-sc {
  font-style: normal;
}

.h2-sc {
  font-size: 2.441em;

  p {
    font-family: var(--typography-fontFamily-primary);
  }
}
