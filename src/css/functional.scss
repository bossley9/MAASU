@import './def';

/**
 * Functional CSS
 *
 * Classes are named with the following format, where
 * the items in brackets are variables. Some may be 
 * optional, or may not even apply.
 *
 * {property}{style/scale}-{media query}
 */

/**
 * -----------------------------------------------------
 * Typography
 * -----------------------------------------------------
 */

@mixin typography($media: '') {
  @each $scale, $value in $typographyMap {
    .fs#{$scale}#{$media} {
      font-size: $value !important;
    }
  }
}
@include typography();

/**
 * -----------------------------------------------------
 * Spacing
 * -----------------------------------------------------
 */

@mixin spacing($media: '') {
  @each $scale, $value in $spacingMap {
    .pa#{$scale}#{$media} {
      padding: $value !important;
    }
    .pt#{$scale}#{$media} {
      padding-top: $value !important;
    }
    .pr#{$scale}#{$media} {
      padding-right: $value !important;
    }
    .pb#{$scale}#{$media} {
      padding-bottom: $value !important;
    }
    .pl#{$scale}#{$media} {
      padding-left: $value !important;
    }
    .px#{$scale}#{$media} {
      padding-right: $value !important;
      padding-left: $value !important;
    }
    .py#{$scale}#{$media} {
      padding-top: $value !important;
      padding-bottom: $value !important;
    }

    .ma#{$scale}#{$media} {
      margin: $value !important;
    }
    .mt#{$scale}#{$media} {
      margin-top: $value !important;
    }
    .mr#{$scale}#{$media} {
      margin-right: $value !important;
    }
    .mb#{$scale}#{$media} {
      margin-bottom: $value !important;
    }
    .ml#{$scale}#{$media} {
      margin-left: $value !important;
    }
    .mx#{$scale}#{$media} {
      margin-right: $value !important;
      margin-left: $value !important;
    }
    .my#{$scale}#{$media} {
      margin-top: $value !important;
      margin-bottom: $value !important;
    }
  }
}
@include spacing();
